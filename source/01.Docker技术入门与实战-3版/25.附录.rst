.. contents::
   :depth: 3
..

附录
====

附录A　常见问题总结
-------------------

镜像相关
~~~~~~~~

1.如何备份系统中的所有镜像
^^^^^^^^^^^^^^^^^^^^^^^^^^

``backup_image.sh``

::

   #!/usr/bin/env bash
   #usage:xxx
   #scripts_name:${NAME}.sh
   # author：xiaojian

   # 备份镜像列表
   docker images |awk 'NR>1{print $1":"$2}'|sort > images.list

   # 导出所有镜像为当前目录下文件
   while read img; do
       echo $img
       file="${img//\//-}"
       sudo docker save $img > $file.tar
   done < images.list

将本地镜像导入为docker镜像

::

   #!/usr/bin/env bash
   #usage:xxx
   #scripts_name:${NAME}.sh
   # author：xiaojian
   while read img; do
       echo $img
       file="${img//\//-}"
       sudo docker load < $file.tar
   done < images.list

2.如何批量清理临时镜像文件？
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

使用如下命令

::

   docker rmi $(docker images -q -f dangling=true) 

3.如何删除所有本地的镜像？
^^^^^^^^^^^^^^^^^^^^^^^^^^

使用如下命令

::

   dokcer rmi -f $(docker images -q)

4.如何清理Docker系统中的无用数据
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

如下命令会自动清理处于停止状态的容器、无用的网络和挂载卷、临时镜像和创建镜像缓存。

::

   docker system prune --volumes -f

5.如何查看镜像内的环境变量？
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

使用如下命令

::

   docker run IMAGE env

6.本地的镜像文件都存放在哪里？
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

与Docker相关的本地资源（包括镜像、容器）默认存放在/var/lib/docker/
目录下。
以aufs文件系统为例，其中container目录存放容器信息，graph目录存放镜像信息，aufs目录下存放具体的镜像层文件。

7. 构建Docker镜像应该遵循哪些原则？
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

整体原则上,尽量保持镜像功能的明确和内容的精简,避免添加额外文件和操作步骤,要点包括：

::

   囗 尽量选取满足需求但较小的基础系统镜像，例如大部分时候可以选择debian:wheezy 或debian:jessie 镜像，仅有不足百兆大小
   囗 清理编译生成文件、安装包的缓存等临时文件；
   囗 安装各个软件时候要指定准确的版本号,并避免引人不需要的依赖；
   囗 从安全角度考虑,应用要尽量使用系统的库和依赖；
   囗 如果安装应用时候需要配置一些特殊的环境变量,在安装后要还原不需要保持的变量值；
   囗 使用Dockerfile创建镜像时候要添加.dockerignore 文件或使用干净的工作目录；
   囗 区分编译环境容器和运行时环境容器,使用多阶段镜像创建。

8.碰到网络问题，无法pull镜像，命令行指定http_proxy无效，如何处理？
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

   在Docker配置文件中添加export http_proxy="http://<PROXY_HOST>:<PROXY_PORT>"，之后重启Docker服务即可。

容器相关
~~~~~~~~

1.容器退出后，通过docker ps 命令查看不到，数据会丢失么？
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

容器退出后会处于终止(exited)状态，此时可以通过docker ps
-a查看。其中的数据也不会丢失，还可以通过``docker [container] start``\ 命令来启动它。
只有删除掉容器才会清除所有数据。

2.如何停止所有正在运行的容器
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

   可以使用 docker [container] stop $(docker ps -q) 命令

3.如何批量清理所有的容器，包括处于运行状态和停止状态的
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

   可以使用 docker [container] rm -f $(docker ps -qa) 命令

4.如何获取某个容器的PID信息
^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

   可以使用 docker [container] inspect --format '{{ .State.Pid }}' <CONTAINER ID or NAME> 命令。

5.如何获取某个容器的IP地址？
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

   可以使用 docker [container] inspect --format '{{ .NetworkSettings.IPAddress }}' <CONTAINER ID or NAME> 命令。
